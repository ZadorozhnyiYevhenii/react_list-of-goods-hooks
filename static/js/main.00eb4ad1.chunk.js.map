{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortedGoods","goodsFromServer","App","useState","None","sortedGoods","setSortedGoods","isGoodReversed","setIsGoodReversed","sorted","goods","copyGoods","Alpha","sort","a","b","localeCompare","Length","length","reverse","getGoodsSorted","isResetButtonVisible","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,iBAAAA,I,eAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAsCC,mBAASH,EAAYI,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4CH,oBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACMC,EAxBR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,YAAaE,EACf,EADeA,eAETI,EAAS,YAAOD,GActB,OAZIL,IAAgBL,EAAYY,OAC9BD,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAGvCV,IAAgBL,EAAYiB,QAC9BN,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGpCX,GACFI,EAAUQ,UAGLR,EAMQS,CACbnB,EACA,CAAEI,cAAaE,mBAQXc,EAAuBhB,IAAgBL,EAAYI,MACpDG,EAQL,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYnB,IAAgBL,EAAYY,QAE5Ca,QAhBqB,kBAAMnB,EAAeN,EAAYY,QASxD,iCAYA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYnB,IAAgBL,EAAYiB,SAE5CQ,QA1BsB,kBAAMnB,EAAeN,EAAYiB,SAmBzD,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QApCkB,kBAAMjB,GAAmBD,IA6B7C,qBAYCc,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAzDY,WACpBnB,EAAeN,EAAYI,MAC3BI,GAAkB,IAoDZ,sBAUJ,6BACGC,EAAOiB,KAAI,SAAAC,GAAI,OACd,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC3HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.00eb4ad1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortedGoods {\n  Alpha,\n  None,\n  Length,\n}\n\ntype Options = {\n  sortedGoods: SortedGoods,\n  isGoodReversed: boolean,\n};\n\nfunction getGoodsSorted(\n  goods: string[],\n  { sortedGoods, isGoodReversed }: Options,\n) {\n  const copyGoods = [...goods];\n\n  if (sortedGoods === SortedGoods.Alpha) {\n    copyGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortedGoods === SortedGoods.Length) {\n    copyGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isGoodReversed) {\n    copyGoods.reverse();\n  }\n\n  return copyGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortedGoods, setSortedGoods] = useState(SortedGoods.None);\n  const [isGoodReversed, setIsGoodReversed] = useState(false);\n  const sorted = getGoodsSorted(\n    goodsFromServer,\n    { sortedGoods, isGoodReversed },\n  );\n\n  const hadnlingReset = () => {\n    setSortedGoods(SortedGoods.None);\n    setIsGoodReversed(false);\n  };\n\n  const isResetButtonVisible = sortedGoods !== SortedGoods.None\n    || isGoodReversed;\n\n  const makeGoodsSortedAlpha = () => setSortedGoods(SortedGoods.Alpha);\n\n  const makeGoodsSortedLength = () => setSortedGoods(SortedGoods.Length);\n\n  const makeGoodsReversed = () => setIsGoodReversed(!isGoodReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortedGoods !== SortedGoods.Alpha },\n          )}\n          onClick={makeGoodsSortedAlpha}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortedGoods !== SortedGoods.Length },\n          )}\n          onClick={makeGoodsSortedLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isGoodReversed },\n          )}\n          onClick={makeGoodsReversed}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={hadnlingReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sorted.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}